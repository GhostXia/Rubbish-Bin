脚本文件为Script.ges
命令区分大小写
#后的字符被视为注释和标签
参数中不能出现右括号或者英文逗号
命令列表：
settitle(文字)
设置游戏标题。


setbackground(路径)
设置背景图片


setchat(文字,整数)
第一个参数设置游戏对话内容，整数必须为0和1
0代表文字无动画
1代表文字具有缓出动画


setimage(路径,数字,数字,数字,数字,整数)
第一个参数设置图片路径
第二到第五个参数描述图片在屏幕上的位置，四个数字为图像四条边在窗口上的百分比位置
第六个参数代表这张图片的叠放次序，越高的数字代表图片在越上层，上层图片会遮挡下层图片，数字必须为0-9之间的数字，且同一层只能存在一张图片
e.g:
setimage(A.jpg,0,0,1,1,0)
这个示例将A.jpg加载到游戏中，位于窗口的0%，0%,100%,100%的位置，这幅图讲充满这个窗口。
图片次序为0，意味着任何其他图片都会遮挡这幅图片


setimageA(路径,数字,数字,数字,数字,整数,整数)
前留个参数与setimage参数的意义一样，第七个参数代表图片的动画
0代表无动画
1和2代表淡入
3动画代表淡出，淡出时动画会继续维持，所以在使用此参数后将不能使用setimage设置图片，必须先使用clearimage清除图片，才能使用setimage
4代表淡出上一个图片后淡入当前设置的图片，上一个图片必须存在，如果以前没有设置过这个层次的图片或者对这个层次的图片使用了clearimage，那么将不能使用这个参数


clearimage(图片层序)
清除层序上的图片


setchatrect(数字,数字,数字,数字)
设置对话文字的区域
四个参数代表对话文字的区域，规则与setimage相同




setchatstyle(字体名称,数字,整数,整数,整数,整数)
设置对话文字的外观
第一个参数代表字体名称
第二个参数代表字体大小，相对于默认窗体大小
第三个参数代表斜体风格，必须为0和1，0代表正常，1代表斜体
第四到第六个参数代表文字颜色，三个参数分别相当于红色，绿色，蓝色，值必须在0-255之间



playbgm(路径,保留参数)
播放背景音乐
第一个参数代表背景音乐路径
第二个参数为保留参数，现在没有作用，但是必须要有




playvoice(路径)
播放人物语音



stopvoice()
停止播放语音
没有参数



stopbgm()
停止播放背景音乐
没有参数




waitclick(数字)
等待玩家点击鼠标
参数代表等待时是否发送WM_PRINT消息，现在这个参数已经没有用处了，常设置为0



button(数字，数字，数字，数字，按钮位)
设置一个按钮
前四个参数代表按钮的范围，与setimage的意义相同，第五个参数代表按钮位，一个按钮位放置一个按钮，必须为0-9之间的整数



removebutton(按钮位)
移除指定按钮位的按钮




clearbutton()
清除所有按钮
没有参数




save(保存位)
保存游戏进度




load(保存位)
从保存位读取游戏进度



setwindowsize(宽，高)
设置窗口的大小，宽高必须为整数，单位为像素




setflag(标志位,表达式)
将标志位设置为指定表达式的值,之后可以使用flag[标志位]来参与表达式计算
e.g setflag(0,1+1)
将标志0设置为1+1的值(2)
e.g setflag(0,flag[0]+1)
将标志0设置为flag[0]+1的值(flag[0]自身加一)
e.g setflag(0,5=5)
将标志0设置为5=5的值(5=5的值为真，真代表1)
表达式可以使用的运算符为：+-*/=&|，分别为加减乘除等与或

if(表达式)
当表达式为真时，执行接下来的内容，为假时，执行else()后的内容




else()
if的else分支




endif()
标志if分支的结束
e.g 一个完整的if语句应该类似这样
if(flag[0]=2/1+3*4)
settitile(True)
else()
settitile(False)
endif()
或是
if(flag=2/1+3*4)
settitile(True)
endif()






while(表达式)
计算表达式，当表达式为真时执行循环



loop()
标志while()语句的结束
e.g 一个完整的While()语句应该类似这样
while(flag[0]<2/1+3*4)
setflag(0,flag[0]+1)
loop()
应当注意条件和运算，以避免死循环




goto(标签)
无条件跳转到标签位置，标签区分大小写
#字符设置标签
e.g:
#Begin
goto(Begin)
这一段语句将造成死循环




delay(延迟秒数)
延迟指定的秒数，延迟结束之后才会执行下一条语句，可以为小数



end()
终止程序